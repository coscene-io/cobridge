diff --git vendor/websocketpp/0.8.2/websocketpp/connection.hpp vendor/websocketpp/0.8.2/websocketpp/connection.hpp
index d019fce..7a6cc6c 100644
--- vendor/websocketpp/0.8.2/websocketpp/connection.hpp
+++ vendor/websocketpp/0.8.2/websocketpp/connection.hpp
@@ -651,9 +651,10 @@ public:
      *
      * @param op The opcode to generated the message with. Default is
      * frame::opcode::text
+     * @param reliable message can not be skipped
      */
-    lib::error_code send(std::string const & payload, frame::opcode::value op =
-        frame::opcode::text);
+    lib::error_code send(std::string const & payload, bool reliable,
+        frame::opcode::value op = frame::opcode::text);
 
     /// Send a message (raw array overload)
     /**
@@ -668,9 +669,10 @@ public:
      *
      * @param op The opcode to generated the message with. Default is
      * frame::opcode::binary
+     * @param reliable message can not be skipped
      */
-    lib::error_code send(void const * payload, size_t len, frame::opcode::value
-        op = frame::opcode::binary);
+    lib::error_code send(void const * payload, size_t len, bool reliable,
+        frame::opcode::value op = frame::opcode::binary);
 
     /// Add a message to the outgoing send queue
     /**
@@ -685,7 +687,7 @@ public:
      *
      * @param msg A message_ptr to the message to send.
      */
-    lib::error_code send(message_ptr msg);
+    lib::error_code send(message_ptr msg, bool reliable);
 
     /// Asyncronously invoke handler::on_inturrupt
     /**
@@ -1357,6 +1359,9 @@ public:
         m_connection_hdl = hdl;
         transport_con_type::set_handle(hdl);
     }
+
+    void get_network_statistics(int& send_bytes, int& dropped_bytes, int& dropped_msgs);
+
 protected:
     void handle_transport_init(lib::error_code const & ec);
 
@@ -1439,8 +1444,9 @@ private:
      * @todo unit tests
      *
      * @param msg The message to push
+     * @param reliable message can not be skipped
      */
-    void write_push(message_ptr msg);
+    void write_push(message_ptr msg, bool reliable);
 
     /// Pop a message from the write queue
     /**
@@ -1489,6 +1495,7 @@ private:
         m_elog->write(l, s.str());
     }
 
+
     // internal handler functions
     read_handler            m_handle_read_frame;
     write_frame_handler     m_write_frame_handler;
@@ -1565,7 +1572,7 @@ private:
     /**
      * Lock: m_write_lock
      */
-    std::queue<message_ptr> m_send_queue;
+    std::queue<std::tuple<uint64_t, message_ptr, bool>> m_send_queue;
 
     /// Size in bytes of the outstanding payloads in the write queue
     /**
@@ -1573,6 +1580,10 @@ private:
      */
     size_t m_send_buffer_size;
 
+    std::atomic<uint64_t> m_send_bytes_amount;
+    std::atomic<uint64_t> m_dropped_bytes_amount;
+    std::atomic<uint64_t> m_dropped_msgs_amount;
+
     /// buffer holding the various parts of the current message being writen
     /**
      * Lock m_write_lock
