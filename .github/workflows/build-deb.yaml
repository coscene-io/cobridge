name: build deb
on:
  push:
    branches:
      - feat-deb-action
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - ros_distribution: noetic
            arch: amd64
            label: ubuntu-latest
            container: cobridge/ros-noetic:latest
          - ros_distribution: foxy
            arch: amd64
            label: ubuntu-latest
            container: cobridge/ros-foxy:latest
          - ros_distribution: humble
            arch: amd64
            label: ubuntu-latest
            container: cobridge/ros-humble:latest
          - ros_distribution: noetic
            arch: arm64
            label: [ linux-arm-64-8c-32g-300gb ]
            container: cobridge/ros-noetic:latest
          - ros_distribution: foxy
            arch: arm64
            label: [ linux-arm-64-8c-32g-300gb ]
            container: cobridge/ros-foxy:latest
          - ros_distribution: humble
            arch: arm64
            label: [ linux-arm-64-8c-32g-300gb ]
            container: cobridge/ros-humble:latest

    name: Build deb (ROS ${{ matrix.ros_distribution }} - ${{ matrix.arch }})

    runs-on: ${{ matrix.label }}
    container: ${{ matrix.container }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: src/cobridge

      - name: Generate debian/ directory and build .deb package
        run: |
          rosdep update --include-eol-distros
          cd ./src/cobridge
          bloom-generate rosdebian --ros-distro ${{ matrix.ros_distribution }}
          DEB_BUILD_OPTIONS=nocheck dpkg-buildpackage -b -us -uc -a${{ matrix.arch }}

      - name: Upload Artifacts with Dynamic Name
        run: |
          echo "ARTIFACT_NAME=$(basename $(find ./src -name '*_${{ matrix.arch }}.deb'))" >> $GITHUB_ENV
          ls .. -lah

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./src/*_${{ matrix.arch }}.deb
